package cn.hackedmc.alexander.module.impl.exploit.disabler;

import cn.hackedmc.alexander.newevent.Listener;
import cn.hackedmc.alexander.newevent.annotations.EventLink;
import cn.hackedmc.alexander.newevent.impl.motion.PreMotionEvent;
import cn.hackedmc.alexander.util.player.MoveUtil;
import cn.hackedmc.alexander.util.rotation.RotationUtil;
import cn.hackedmc.alexander.util.vector.Vector2f;
import cn.hackedmc.alexander.module.impl.exploit.Disabler;
import cn.hackedmc.alexander.value.Mode;

public class OmniSprintDisabler extends Mode<Disabler> {

    public OmniSprintDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    @EventLink()
    public final Listener<PreMotionEvent> onPreMotion = event -> {
        if (!mc.thePlayer.isSwingInProgress && mc.gameSettings.keyBindBack.isKeyDown()) {
            event.setYaw(RotationUtil.applySensitivityPatch(new Vector2f((float) Math.toDegrees(MoveUtil.direction()),
                    event.getPitch())).x);
        }
    };
}